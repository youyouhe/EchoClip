"""Sync database schema with current models

Revision ID: 37972a95e74c
Revises: 005
Create Date: 2025-08-16 14:02:44.441467

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '37972a95e74c'
down_revision: Union[str, Sequence[str], None] = '005'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Create resource_tags table
    op.create_table('resource_tags',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', mysql.VARCHAR(length=100), nullable=False),
    sa.Column('description', mysql.VARCHAR(length=500), nullable=True),
    sa.Column('tag_type', mysql.VARCHAR(length=50), nullable=False),
    sa.Column('is_active', mysql.TINYINT(display_width=1), server_default=sa.text("'1'"), autoincrement=False, nullable=False),
    sa.Column('created_at', mysql.DATETIME(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', mysql.DATETIME(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_index('ix_resource_tags_id', 'resource_tags', ['id'], unique=False)
    op.create_index('ix_resource_tags_name', 'resource_tags', ['name'], unique=True)
    op.create_index('ix_resource_tags_tag_type', 'resource_tags', ['tag_type'], unique=False)
    op.create_index('ix_resource_tags_is_active', 'resource_tags', ['is_active'], unique=False)
    
    # Create resources table
    op.create_table('resources',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('filename', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('original_filename', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('file_path', mysql.VARCHAR(length=500), nullable=False),
    sa.Column('file_size', mysql.FLOAT(), nullable=False),
    sa.Column('mime_type', mysql.VARCHAR(length=100), nullable=False),
    sa.Column('file_type', mysql.VARCHAR(length=50), nullable=False),
    sa.Column('duration', mysql.FLOAT(), nullable=True),
    sa.Column('width', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('height', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('description', mysql.VARCHAR(length=1000), nullable=True),
    sa.Column('is_public', mysql.TINYINT(display_width=1), server_default=sa.text("'1'"), autoincrement=False, nullable=False),
    sa.Column('is_active', mysql.TINYINT(display_width=1), server_default=sa.text("'1'"), autoincrement=False, nullable=False),
    sa.Column('download_count', mysql.INTEGER(), server_default=sa.text("'0'"), autoincrement=False, nullable=False),
    sa.Column('view_count', mysql.INTEGER(), server_default=sa.text("'0'"), autoincrement=False, nullable=False),
    sa.Column('created_by', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', mysql.DATETIME(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', mysql.DATETIME(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_index('ix_resources_id', 'resources', ['id'], unique=False)
    op.create_index('ix_resources_filename', 'resources', ['filename'], unique=False)
    op.create_index('ix_resources_file_path', 'resources', ['file_path'], unique=True)
    op.create_index('ix_resources_file_type', 'resources', ['file_type'], unique=False)
    op.create_index('ix_resources_is_public', 'resources', ['is_public'], unique=False)
    op.create_index('ix_resources_is_active', 'resources', ['is_active'], unique=False)
    op.create_index('ix_resources_created_by', 'resources', ['created_by'], unique=False)
    
    # Create resource_tags_mapping table
    op.create_table('resource_tags_mapping',
    sa.Column('resource_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('tag_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['resource_id'], ['resources.id'], name='resource_tags_mapping_ibfk_1', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['resource_tags.id'], name='resource_tags_mapping_ibfk_2', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('resource_id', 'tag_id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    
    # Alter columns in processing_tasks
    with op.batch_alter_table('processing_tasks', schema=None) as batch_op:
        batch_op.alter_column('progress',
                   existing_type=mysql.FLOAT(),
                   nullable=True,
                   existing_server_default=sa.text("'0'"))
        batch_op.alter_column('duration_seconds',
                   existing_type=mysql.FLOAT(),
                   nullable=True,
                   existing_server_default=sa.text("'0'"))
        batch_op.alter_column('retry_count',
                   existing_type=mysql.INTEGER(),
                   nullable=True,
                   existing_server_default=sa.text("'0'"))
        batch_op.alter_column('max_retries',
                   existing_type=mysql.INTEGER(),
                   nullable=True,
                   existing_server_default=sa.text("'3'"))
    
    # Alter columns in users
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('is_active',
                   existing_type=mysql.TINYINT(display_width=1),
                   nullable=True,
                   existing_server_default=sa.text("'1'"))
        batch_op.alter_column('is_superuser',
                   existing_type=mysql.TINYINT(display_width=1),
                   nullable=True,
                   existing_server_default=sa.text("'0'"))
        batch_op.drop_column('encrypted_oauth_access_token')
        batch_op.drop_column('encrypted_oauth_refresh_token')
    
    # Alter columns in video_slices
    with op.batch_alter_table('video_slices', schema=None) as batch_op:
        batch_op.alter_column('progress',
                   existing_type=mysql.FLOAT(),
                   nullable=True,
                   existing_server_default=sa.text("'0'"))
        batch_op.alter_column('audio_processing_status',
                   existing_type=mysql.VARCHAR(length=50),
                   comment=None,
                   existing_comment='éŸ³é¢‘æ\x8f\x90å\x8f–å¤„ç\x90†çŠ¶æ€\x81',
                   existing_nullable=True,
                   existing_server_default=sa.text("'pending'"))
        batch_op.alter_column('audio_progress',
                   existing_type=mysql.FLOAT(),
                   comment=None,
                   existing_comment='éŸ³é¢‘æ\x8f\x90å\x8f–è¿›åº¦',
                   existing_nullable=True,
                   existing_server_default=sa.text("'0'"))
        batch_op.alter_column('audio_task_id',
                   existing_type=mysql.VARCHAR(length=255),
                   comment=None,
                   existing_comment='éŸ³é¢‘æ\x8f\x90å\x8f–çš„Celeryä»»åŠ¡ID',
                   existing_nullable=True)
        batch_op.alter_column('audio_error_message',
                   existing_type=mysql.TEXT(),
                   comment=None,
                   existing_comment='éŸ³é¢‘æ\x8f\x90å\x8f–é”™è¯¯ä¿¡æ\x81¯',
                   existing_nullable=True)
        batch_op.alter_column('audio_url',
                   existing_type=mysql.TEXT(),
                   comment=None,
                   existing_comment='éŸ³é¢‘æ–‡ä»¶çš„MinIOå\xad˜å‚¨URL',
                   existing_nullable=True)
        batch_op.alter_column('srt_url',
                   existing_type=mysql.TEXT(),
                   comment=None,
                   existing_comment='SRTæ–‡ä»¶çš„MinIOå\xad˜å‚¨URL',
                   existing_nullable=True)
        batch_op.alter_column('capcut_status',
                   existing_type=mysql.VARCHAR(length=50),
                   comment=None,
                   existing_comment='CapCutå¯¼å‡ºçŠ¶æ€\x81',
                   existing_nullable=True,
                   existing_server_default=sa.text("'pending'"))
        batch_op.alter_column('capcut_task_id',
                   existing_type=mysql.VARCHAR(length=255),
                   comment=None,
                   existing_comment='Celeryä»»åŠ¡ID',
                   existing_nullable=True)
        batch_op.alter_column('capcut_draft_url',
                   existing_type=mysql.TEXT(),
                   comment=None,
                   existing_comment='CapCutè\x8d‰ç¨¿æ–‡ä»¶URL',
                   existing_nullable=True)
        batch_op.alter_column('capcut_error_message',
                   existing_type=mysql.TEXT(),
                   comment=None,
                   existing_comment='CapCutå¯¼å‡ºé”™è¯¯ä¿¡æ\x81¯',
                   existing_nullable=True)
    
    # Alter columns in video_sub_slices
    with op.batch_alter_table('video_sub_slices', schema=None) as batch_op:
        batch_op.alter_column('progress',
                   existing_type=mysql.FLOAT(),
                   nullable=True,
                   existing_server_default=sa.text("'0'"))
        batch_op.alter_column('audio_processing_status',
                   existing_type=mysql.VARCHAR(length=50),
                   comment=None,
                   existing_comment='éŸ³é¢‘æ\x8f\x90å\x8f–å¤„ç\x90†çŠ¶æ€\x81',
                   existing_nullable=True,
                   existing_server_default=sa.text("'pending'"))
        batch_op.alter_column('audio_progress',
                   existing_type=mysql.FLOAT(),
                   comment=None,
                   existing_comment='éŸ³é¢‘æ\x8f\x90å\x8f–è¿›åº¦',
                   existing_nullable=True,
                   existing_server_default=sa.text("'0'"))
        batch_op.alter_column('audio_task_id',
                   existing_type=mysql.VARCHAR(length=255),
                   comment=None,
                   existing_comment='éŸ³é¢‘æ\x8f\x90å\x8f–çš„Celeryä»»åŠ¡ID',
                   existing_nullable=True)
        batch_op.alter_column('audio_error_message',
                   existing_type=mysql.TEXT(),
                   comment=None,
                   existing_comment='éŸ³é¢‘æ\x8f\x90å\x8f–é”™è¯¯ä¿¡æ\x81¯',
                   existing_nullable=True)
        batch_op.alter_column('audio_url',
                   existing_type=mysql.TEXT(),
                   comment=None,
                   existing_comment='éŸ³é¢‘æ–‡ä»¶çš„MinIOå\xad˜å‚¨URL',
                   existing_nullable=True)
        batch_op.alter_column('srt_processing_status',
                   existing_type=mysql.VARCHAR(length=50),
                   comment=None,
                   existing_comment='SRTå¤„ç\x90†çŠ¶æ€\x81',
                   existing_nullable=True,
                   existing_server_default=sa.text("'pending'"))
        batch_op.alter_column('srt_progress',
                   existing_type=mysql.FLOAT(),
                   comment=None,
                   existing_comment='SRTå¤„ç\x90†è¿›åº¦',
                   existing_nullable=True,
                   existing_server_default=sa.text("'0'"))
        batch_op.alter_column('srt_task_id',
                   existing_type=mysql.VARCHAR(length=255),
                   comment=None,
                   existing_comment='SRTå¤„ç\x90†çš„Celeryä»»åŠ¡ID',
                   existing_nullable=True)
        batch_op.alter_column('srt_error_message',
                   existing_type=mysql.TEXT(),
                   comment=None,
                   existing_comment='SRTå¤„ç\x90†é”™è¯¯ä¿¡æ\x81¯',
                   existing_nullable=True)
        batch_op.alter_column('srt_url',
                   existing_type=mysql.TEXT(),
                   comment=None,
                   existing_comment='SRTæ–‡ä»¶çš„MinIOå\xad˜å‚¨URL',
                   existing_nullable=True)
    
    # Alter columns in videos
    with op.batch_alter_table('videos', schema=None) as batch_op:
        batch_op.alter_column('download_progress',
                   existing_type=mysql.FLOAT(),
                   nullable=True,
                   existing_server_default=sa.text("'0'"))
        batch_op.alter_column('processing_progress',
                   existing_type=mysql.FLOAT(),
                   nullable=True,
                   existing_server_default=sa.text("'0'"))
        batch_op.drop_column('audio_file_path')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Add back dropped columns
    with op.batch_alter_table('videos', schema=None) as batch_op:
        batch_op.add_column(sa.Column('audio_file_path', mysql.VARCHAR(length=1000), nullable=True))
        batch_op.alter_column('processing_progress',
                   existing_type=mysql.FLOAT(),
                   nullable=False,
                   existing_server_default=sa.text("'0'"))
        batch_op.alter_column('download_progress',
                   existing_type=mysql.FLOAT(),
                   nullable=False,
                   existing_server_default=sa.text("'0'"))
    
    # Restore video_sub_slices columns
    with op.batch_alter_table('video_sub_slices', schema=None) as batch_op:
        batch_op.alter_column('srt_url',
                   existing_type=mysql.TEXT(),
                   comment='SRTæ–‡ä»¶çš„MinIOå\xad˜å‚¨URL',
                   existing_nullable=True)
        batch_op.alter_column('srt_error_message',
                   existing_type=mysql.TEXT(),
                   comment='SRTå¤„ç\x90†é”™è¯¯ä¿¡æ\x81¯',
                   existing_nullable=True)
        batch_op.alter_column('srt_task_id',
                   existing_type=mysql.VARCHAR(length=255),
                   comment='SRTå¤„ç\x90†çš„Celeryä»»åŠ¡ID',
                   existing_nullable=True)
        batch_op.alter_column('srt_progress',
                   existing_type=mysql.FLOAT(),
                   comment='SRTå¤„ç\x90†è¿›åº¦',
                   existing_nullable=True,
                   existing_server_default=sa.text("'0'"))
        batch_op.alter_column('srt_processing_status',
                   existing_type=mysql.VARCHAR(length=50),
                   comment='SRTå¤„ç\x90†çŠ¶æ€\x81',
                   existing_nullable=True,
                   existing_server_default=sa.text("'pending'"))
        batch_op.alter_column('audio_url',
                   existing_type=mysql.TEXT(),
                   comment='éŸ³é¢‘æ–‡ä»¶çš„MinIOå\xad˜å‚¨URL',
                   existing_nullable=True)
        batch_op.alter_column('audio_error_message',
                   existing_type=mysql.TEXT(),
                   comment='éŸ³é¢‘æ\x8f\x90å\x8f–é”™è¯¯ä¿¡æ\x81¯',
                   existing_nullable=True)
        batch_op.alter_column('audio_task_id',
                   existing_type=mysql.VARCHAR(length=255),
                   comment='éŸ³é¢‘æ\x8f\x90å\x8f–çš„Celeryä»»åŠ¡ID',
                   existing_nullable=True)
        batch_op.alter_column('audio_progress',
                   existing_type=mysql.FLOAT(),
                   comment='éŸ³é¢‘æ\x8f\x90å\x8f–è¿›åº¦',
                   existing_nullable=True,
                   existing_server_default=sa.text("'0'"))
        batch_op.alter_column('audio_processing_status',
                   existing_type=mysql.VARCHAR(length=50),
                   comment='éŸ³é¢‘æ\x8f\x90å\x8f–å¤„ç\x90†çŠ¶æ€\x81',
                   existing_nullable=True,
                   existing_server_default=sa.text("'pending'"))
        batch_op.alter_column('progress',
                   existing_type=mysql.FLOAT(),
                   nullable=False,
                   existing_server_default=sa.text("'0'"))
    
    # Restore video_slices columns
    with op.batch_alter_table('video_slices', schema=None) as batch_op:
        batch_op.alter_column('capcut_error_message',
                   existing_type=mysql.TEXT(),
                   comment='CapCutå¯¼å‡ºé”™è¯¯ä¿¡æ\x81¯',
                   existing_nullable=True)
        batch_op.alter_column('capcut_draft_url',
                   existing_type=mysql.TEXT(),
                   comment='CapCutè\x8d‰ç¨¿æ–‡ä»¶URL',
                   existing_nullable=True)
        batch_op.alter_column('capcut_task_id',
                   existing_type=mysql.VARCHAR(length=255),
                   comment='Celeryä»»åŠ¡ID',
                   existing_nullable=True)
        batch_op.alter_column('capcut_status',
                   existing_type=mysql.VARCHAR(length=50),
                   comment='CapCutå¯¼å‡ºçŠ¶æ€\x81',
                   existing_nullable=True,
                   existing_server_default=sa.text("'pending'"))
        batch_op.alter_column('srt_url',
                   existing_type=mysql.TEXT(),
                   comment='SRTæ–‡ä»¶çš„MinIOå\xad˜å‚¨URL',
                   existing_nullable=True)
        batch_op.alter_column('audio_url',
                   existing_type=mysql.TEXT(),
                   comment='éŸ³é¢‘æ–‡ä»¶çš„MinIOå\xad˜å‚¨URL',
                   existing_nullable=True)
        batch_op.alter_column('audio_error_message',
                   existing_type=mysql.TEXT(),
                   comment='éŸ³é¢‘æ\x8f\x90å\x8f–é”™è¯¯ä¿¡æ\x81¯',
                   existing_nullable=True)
        batch_op.alter_column('audio_task_id',
                   existing_type=mysql.VARCHAR(length=255),
                   comment='éŸ³é¢‘æ\x8f\x90å\x8f–çš„Celeryä»»åŠ¡ID',
                   existing_nullable=True)
        batch_op.alter_column('audio_progress',
                   existing_type=mysql.FLOAT(),
                   comment='éŸ³é¢‘æ\x8f\x90å\x8f–è¿›åº¦',
                   existing_nullable=True,
                   existing_server_default=sa.text("'0'"))
        batch_op.alter_column('audio_processing_status',
                   existing_type=mysql.VARCHAR(length=50),
                   comment='éŸ³é¢‘æ\x8f\x90å\x8f–å¤„ç\x90†çŠ¶æ€\x81',
                   existing_nullable=True,
                   existing_server_default=sa.text("'pending'"))
        batch_op.alter_column('progress',
                   existing_type=mysql.FLOAT(),
                   nullable=False,
                   existing_server_default=sa.text("'0'"))
    
    # Restore users columns
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('encrypted_oauth_refresh_token', mysql.VARCHAR(length=1024), nullable=True))
        batch_op.add_column(sa.Column('encrypted_oauth_access_token', mysql.VARCHAR(length=1024), nullable=True))
        batch_op.alter_column('is_superuser',
                   existing_type=mysql.TINYINT(display_width=1),
                   nullable=False,
                   existing_server_default=sa.text("'0'"))
        batch_op.alter_column('is_active',
                   existing_type=mysql.TINYINT(display_width=1),
                   nullable=False,
                   existing_server_default=sa.text("'1'"))
    
    # Restore processing_tasks columns
    with op.batch_alter_table('processing_tasks', schema=None) as batch_op:
        batch_op.alter_column('max_retries',
                   existing_type=mysql.INTEGER(),
                   nullable=False,
                   existing_server_default=sa.text("'3'"))
        batch_op.alter_column('retry_count',
                   existing_type=mysql.INTEGER(),
                   nullable=False,
                   existing_server_default=sa.text("'0'"))
        batch_op.alter_column('duration_seconds',
                   existing_type=mysql.FLOAT(),
                   nullable=False,
                   existing_server_default=sa.text("'0'"))
        batch_op.alter_column('progress',
                   existing_type=mysql.FLOAT(),
                   nullable=False,
                   existing_server_default=sa.text("'0'"))
    
    # Drop resource-related tables
    op.drop_table('resource_tags_mapping')
    op.drop_table('resources')
    op.drop_table('resource_tags')
    # ### end Alembic commands ###